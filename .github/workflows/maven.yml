# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone Atlas
        uses: actions/checkout@v4
        with:
          repository: kNoAPP/Atlas
          path: Atlas
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-Atlas-${{ hashFiles('**/Atlas/pom.xml') }}
          restore-keys: ${{ runner.os }}-Atlas-
      - name: Build Atlas
        run: |
          cd Atlas
          mvn --batch-mode --update-snapshots verify
      - name: Restart server
        run: |
          curl "https://panel.knoban.com/api/client/servers/${{ secrets.PTERODACTYL_CONTAINER }}/power" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_APITOKEN }}' \
          -X POST \
          -d '{"signal": "restart"}'
      - name: Upload Atlas
        run: |
          cd Atlas
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo $VERSION
          mv ./target/atlas-$VERSION.jar ./target/Atlas.jar
          curl "https://panel.knoban.com/api/client/servers/${{ secrets.PTERODACTYL_CONTAINER }}/files/delete" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_APITOKEN }}' \
          -X POST \
          -d '{"root": "/plugins", "files": ["Atlas.jar"]}'
          curl "https://panel.knoban.com/api/client/servers/${{ secrets.PTERODACTYL_CONTAINER }}/files/write?file=%2Fplugins%2FAtlas.jar" \
          -H 'Accept: application/json' \
          -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_APITOKEN }}' \
          -X POST \
          --data-binary '@./target/Atlas.jar'
